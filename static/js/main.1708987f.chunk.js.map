{"version":3,"sources":["history.js","cmps/NavBar.jsx","services/eventBusService.js","cmps/UserMessage.jsx","services/httpService.js","services/storageService.js","services/footballService.js","cmps/AutoComplete.jsx","store/actions/footballActions.js","cmps/TeamPreview.jsx","pages/Teams.jsx","pages/TeamDetails.jsx","App.jsx","serviceWorker.js","store/reducers/footballReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["history","createBrowserHistory","NavBar","props","className","href","eventBus","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","data","dispatchEvent","CustomEvent","UserMessage","state","msg","type","this","unsubscribeFromEventBus","setState","txt","setTimeout","console","log","Alert","variant","severity","Component","BASE_URL","axios","Axios","create","httpService","endpoint","headers","ajax","a","method","url","res","dir","response","saveToStorage","key","val","localStorage","setItem","JSON","stringify","loadFromStorage","getItem","parse","removeFromStorage","removeItem","API_KEY","TEAMS","term","teams","storageService","filter","team","AreaId","teamId","allTeams","find","selectedTeam","TeamId","players","locations","location","Name","toLowerCase","includes","footballService","getTeams","getTeamWithPlayers","getLocations","AutoComplete","useSelector","footballApp","dispatch","useDispatch","useState","options","showOptions","autoCmpState","setautoCmpState","setOption","locationId","error","message","target","value","length","onChange","placeholder","map","option","idx","onClick","TeamPreview","src","WikipediaLogoUrl","alt","Founded","Address","City","AreaName","style","to","Button","component","color","Teams","useEffect","TeamDetails","id","useParams","currTeam","title","Website","player","PlayerId","PhotoUrl","CommonName","Jersey","secondaryColor","height","width","App","basename","exact","path","Boolean","hostname","match","initialState","filterdTeams","rootReducer","combineReducers","action","filterTeams","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1708987f.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\nexport const history = createBrowserHistory();\r\n","import React from 'react';\r\n\r\nexport function NavBar(props) {\r\n\r\n    return (\r\n        <header className=\"nav-header flex space-between align-center\">\r\n            <a href=\"/football-app\">Football App.</a>\r\n        </header>\r\n    )\r\n\r\n}\r\n","function on(eventName, listener) {\r\n    const callListener = ({ detail }) => {\r\n        listener(detail)\r\n    }\r\n    window.addEventListener(eventName, callListener)\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener)\r\n    }\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\n\r\nexport const eventBus = { on, emit }","import React, { Component } from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { eventBus } from '../services/eventBusService';\r\n\r\nexport class UserMessage extends Component {\r\n    state = {\r\n        msg: null,\r\n        type: 'error'\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.unsubscribeFromEventBus = eventBus.on('show-msg', (data) => {\r\n            const delay = 3000;\r\n            this.setState({ msg: data.txt, type: data.type })\r\n            setTimeout(() => {\r\n                this.setState({ msg: null, type: null })\r\n            }, delay)\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this.unsubscribeFromEventBus();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { msg, type } = this.state;\r\n        if (!msg) return ''\r\n        console.log(msg);\r\n        return (\r\n\r\n            <div className=\"user-message\">\r\n                <Alert variant=\"filled\" severity={type}>{msg}</Alert>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}","import Axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.sportsdata.io/v3/soccer/scores/json/'\r\n\r\n\r\nconst axios = Axios.create({\r\n    // withCredentials: true,\r\n\r\n});\r\n\r\n\r\nexport const httpService = {\r\n    get(endpoint, data, headers) {\r\n        return ajax(endpoint, 'GET', data, headers)\r\n    },\r\n    post(endpoint, data, headers) {\r\n\r\n        return ajax(endpoint, 'POST', data, headers)\r\n    },\r\n    put(endpoint, data, headers) {\r\n        return ajax(endpoint, 'PUT', data, headers)\r\n    },\r\n    delete(endpoint, data, headers) {\r\n        return ajax(endpoint, 'DELETE', data, headers)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null, headers = null) {\r\n    console.log(`${BASE_URL}${endpoint}`)\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            headers\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.dir(err);\r\n        console.log(err.response)\r\n            // if (err.response && err.response.status === 401) {\r\n\r\n        throw err;\r\n    }\r\n}","export default {\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    removeFromStorage\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return JSON.parse(val)\r\n}\r\n\r\nfunction removeFromStorage(key) {\r\n    localStorage.removeItem(key);\r\n}","import { httpService } from './httpService';\r\nimport storageService from './storageService';\r\nconst API_KEY = '5c458d8273b14258986fc51cb35ad662';\r\nconst TEAMS = 'TEAMS';\r\nconst LOCATIONS = 'LOCATIONS';\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function getTeams(term = '') {\r\n    let teams = storageService.loadFromStorage(TEAMS);\r\n    if (!teams) {\r\n        const teams = await httpService.get(`Teams?key=${API_KEY}`);\r\n        storageService.saveToStorage(TEAMS, teams);\r\n    }\r\n    if (term) return teams.filter(team => team.AreaId === term);\r\n    return teams;\r\n}\r\n\r\nasync function getTeamWithPlayers(teamId) {\r\n    let team = storageService.loadFromStorage(TEAMS + teamId);\r\n    if (!team) {\r\n        const allTeams = storageService.loadFromStorage(TEAMS);\r\n        team = allTeams.find(selectedTeam => selectedTeam.TeamId === +teamId);\r\n        const players = await httpService.get(`playersByTeam/${teamId}?key=${API_KEY}`);\r\n        team.players = players;\r\n        storageService.saveToStorage(TEAMS + teamId, team);\r\n    }\r\n    return team;\r\n}\r\n\r\nasync function getLocations(term) {\r\n    let locations = storageService.loadFromStorage(LOCATIONS);\r\n    if (!locations) {\r\n        locations = await httpService.get(`areas?key=${API_KEY}`);\r\n        storageService.saveToStorage(LOCATIONS, locations);\r\n    }\r\n    locations = term ? locations.filter(location => location.Name.toLowerCase().includes(term.toLowerCase())) : locations;\r\n    return locations;\r\n\r\n}\r\n\r\nexport const footballService = {\r\n    getTeams,\r\n    getTeamWithPlayers,\r\n    getLocations\r\n\r\n}","import React from 'react';\r\nimport { footballService } from '../services/footballService';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventBus } from '../services/eventBusService';\r\nimport { useState } from 'react';\r\nimport { setFilter } from '../store/actions/footballActions';\r\n\r\n\r\nexport function AutoComplete() {\r\n    useSelector(state => state.footballApp.teams);\r\n    const dispatch = useDispatch();\r\n    const [autoCmpState, setautoCmpState] = useState({\r\n        txt: '',\r\n        options: [],\r\n        showOptions: false\r\n    });\r\n\r\n\r\n    function setOption(location) {\r\n        setautoCmpState({ txt: location.Name, showOptions: false });\r\n        try {\r\n            dispatch(setFilter(location.AreaId))\r\n        } catch (error) {\r\n            eventBus.emit('show-msg', {\r\n                type: 'error',\r\n                txt: error.message\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    async function onChange({ target }) {\r\n        try {\r\n            await getLocations(target.value);\r\n\r\n        } catch (error) {\r\n            eventBus.emit('show-msg', {\r\n                type: 'error',\r\n                txt: error.message\r\n            })\r\n        }\r\n    }\r\n\r\n    async function getLocations(term) {\r\n        const locations = await footballService.getLocations(term);\r\n        const showOptions = (locations.length === 0 || term.length === 0) ? false : true;\r\n        setautoCmpState({ txt: term, options: locations, showOptions });\r\n        if (term === '') setOption(term);\r\n    }\r\n\r\n\r\n    const { showOptions, options, txt } = autoCmpState;\r\n\r\n    return (\r\n        <div className=\"autocomplete-cont flex column align-center\" >\r\n            <input type=\"text\" value={txt} onChange={onChange} placeholder=\"teams by  location e.g spain\" />\r\n            <ul className=\"autocomplete-results align-start clean-list flex column align-\">\r\n                {showOptions && options.map((option, idx) => <li onClick={() => setOption(option)} value={option.AreaId} key={idx}>{option.Name}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { footballService } from '../../services/footballService.js';\r\n\r\nexport const GET_TEAMS = 'GET_TEAMS';\r\nexport const SET_TEAM = 'SET_TEAM';\r\nexport const SET_FILTER = 'FILTER';\r\n\r\nexport function getTeams(locationId) {\r\n    return async dispatch => {\r\n        const teams = await footballService.getTeams(locationId);\r\n        dispatch({ type: GET_TEAMS, teams });\r\n    }\r\n}\r\nexport function setTeam(teamId) {\r\n    return async dispatch => {\r\n        const team = await footballService.getTeamWithPlayers(teamId)\r\n        dispatch({ type: SET_TEAM, team });\r\n    }\r\n}\r\nexport function setFilter(locationId) {\r\n    return async dispatch => {\r\n        dispatch({ type: SET_FILTER, filter: locationId });\r\n    }\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport function TeamPreview(props) {\r\n\r\n    const { team } = props;\r\n\r\n    return (\r\n        <section className=\"card flex column \">\r\n            <LazyLoadImage src={team.WikipediaLogoUrl} alt={team.Name}></LazyLoadImage>\r\n            <h1>{team.Name}</h1>\r\n            <h2>{`Founded: ${team.Founded}`}</h2>\r\n            <p>{`Address: ${team.Address}, ${team.City}, ${team.AreaName}`}</p>\r\n            <div className=\"actions\">\r\n                <Link style={{ \"color\": \"black\" }} to={`/team/${team.TeamId}`}> <Button component='button' variant=\"contained\" color=\"primary\">\r\n                    Team Details\r\n            </Button></Link>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTeams } from '../store/actions/footballActions';\r\nimport { AutoComplete } from '../cmps/AutoComplete'\r\nimport { TeamPreview } from '../cmps/TeamPreview';\r\n\r\nexport const Teams = () => {\r\n    const teams = useSelector(state => state.footballApp.teams);\r\n    const filter = useSelector(state => state.footballApp.filter);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getTeams(filter))\r\n    }, [dispatch, filter]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <main className=\"teams-cont flex column\">\r\n            <AutoComplete></AutoComplete>\r\n            <div className=\"teams-list\">\r\n                {teams && teams.map((team, idx) => <TeamPreview team={team} key={idx}></TeamPreview>)}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from \"react-router\";\r\nimport { setTeam } from '../store/actions/footballActions';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport function TeamDetails() {\r\n    let { id } = useParams();\r\n    const team = useSelector(state => state.footballApp.currTeam);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setTeam(id));\r\n\r\n    }, [dispatch, id])\r\n\r\n\r\n    if (!team) return (<div className=\"flex column align-center\">\r\n        <Loader secondaryColor=\"#2196f3d9\" type=\"Circles\" color=\"#2196F3\"\r\n            className=\"loader\" height={60} width={60} />\r\n        <p>Loading...</p>\r\n    </div>)\r\n    return (\r\n        <section className=\"team-details\">\r\n            <div className=\" flex column\">\r\n                <header className=\"flex align-center justify-center\">\r\n                    <LazyLoadImage src={team.WikipediaLogoUrl} alt={team.Name} title={team.Name} />\r\n                    <h1>{team.Name}</h1>\r\n                </header>\r\n                <div className=\"flex space-evenly wrap\">\r\n                    <div>\r\n                        <h2>{`Founded: ${team.Founded}`}</h2>\r\n                        <div className=\"content flex wrap\">\r\n                            <p>Website:</p>\r\n                            <a href={team.Website}>{team.Website}</a>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"content flex wrap\">\r\n                            <p>{`Address: ${team.Address}, ${team.City}, ${team.AreaName}`}</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <h2>Players:</h2>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Image</th>\r\n                                    <th>Name</th>\r\n                                    <th>Jersey</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {team.players.map(player => (<tr key={player.PlayerId}>\r\n                                    <td><img src={player.PhotoUrl} alt={player.Name}></img></td>\r\n                                    <td>{player.CommonName}</td>\r\n                                    <td>{player.Jersey}</td>\r\n                                </tr>))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { history } from './history';\r\nimport { NavBar } from './cmps/NavBar';\r\nimport { UserMessage } from './cmps/UserMessage';\r\nimport { Teams } from './pages/Teams';\r\nimport { TeamDetails } from './pages/TeamDetails'\r\n\r\n\r\n\r\nexport function App() {\r\n  return (\r\n    <div className=\"football-cont\">\r\n      <NavBar></NavBar>\r\n      <BrowserRouter basename=\"/football-app\" history={history}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Teams} />\r\n          <Route path=\"/team/:id\" component={TeamDetails} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <UserMessage></UserMessage>\r\n    </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { GET_TEAMS, SET_TEAM, SET_FILTER } from '../actions/footballActions';\r\n\r\n\r\nconst initialState = {\r\n    teams: [],\r\n    currTeam: null,\r\n    filterdTeams: [],\r\n    filter: ''\r\n\r\n}\r\n\r\nexport function footballReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_TEAMS:\r\n            return {\r\n                ...state,\r\n                teams: action.teams\r\n            }\r\n        case SET_TEAM:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    currTeam: action.team\r\n                }\r\n            }\r\n        case SET_FILTER:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    filter: action.filter,\r\n                    filterTeams: state.teams.filter(team => team.AreaId === action.filter),\r\n\r\n                }\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { footballReducer } from './footballReducer';\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    footballApp: footballReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/index';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './style/global.scss';\r\nimport { App } from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store/store';\r\n\r\n\r\nReactDOM.render( <\r\n        Provider store = { store } >\r\n        <\r\n        App / >\r\n        <\r\n        /Provider>,\r\n        document.getElementById('root')\r\n    )\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}